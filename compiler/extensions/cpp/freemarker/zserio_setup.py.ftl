import sys
import os
from pathlib import Path
from pybind11.setup_helpers import Pybind11Extension, build_ext, ParallelCompile
from setuptools import setup

is_64bits = sys.maxsize > 2**32

sources = [str(filename) for filename in Path(".").rglob('*.cpp')]
cpp_runtime_dir = Path(os.getenv('ZSERIO_CPP_RUNTIME_DIR'))
cpp_runtime_sources = [str(filename) for filename in cpp_runtime_dir.rglob("*.cpp")]

macros = [("ZSERIO_RUNTIME_64BIT", None)] if is_64bits else []

zserio_gen = Pybind11Extension(
    'zserio_gen_${rootPackageName}', sources + cpp_runtime_sources,
    include_dirs=[".", str(cpp_runtime_dir)],
    extra_compile_args=['-O3'],
    define_macros=macros
)

ParallelCompile("ZSERIO_GEN_BUILD_JOBS").install()

setup(
    name='zserio_gen_${rootPackageName}',
    description='Binding to C++ sources sources generated by Zserio for package ${rootPackageName}',
    ext_modules=[zserio_gen],
    cmdclass={"build_ext": build_ext},
)
