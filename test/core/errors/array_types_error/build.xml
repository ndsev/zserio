<project name="array_types_error" basedir="." default="run">
    <testProperties testPath="errors/array_types_error" testName="array_types_error"/>

    <target name="prepare">
        <testPrepare testName="array_types_error"/>
    </target>

    <target name="gen.check" depends="prepare">
        <testGenCheck testName="array_types_error"/>
    </target>

    <target name="gen" depends="gen.check" unless="array_types_error.zs.gen_is_uptodate">
        <testGen testName="array_types_error" zsFile="array_length_field_not_available_error.zs"
            ignoreErrors="true"/>
        <testGen testName="array_types_error" zsFile="array_length_field_used_as_indexed_offset_error.zs"
            ignoreErrors="true"/>
        <testGen testName="array_types_error" zsFile="array_length_field_used_as_offset_error.zs"
            ignoreErrors="true"/>
        <testGen testName="array_types_error" zsFile="deprecated_implicit_array_error.zs" ignoreErrors="true"/>
        <testGen testName="array_types_error" zsFile="implicit_array_bitfield_with_wrong_length_error.zs"
            ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_bool_error.zs" ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_complex_with_field_behind_error.zs"
                ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_compound_error.zs" ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_dynamic_bitfield_error.zs"
            ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_not_last_error.zs" ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_string_error.zs" ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_struct_not_last_error.zs"
            ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_varint_error.zs" ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_with_auto_array_behind_error.zs"
            ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_with_auto_optional_behind_error.zs"
            ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_with_indexed_offsets_error.zs"
            ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_with_length_error.zs" ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="implicit_array_with_packed_array_behind_error.zs"
            ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="non_empty_array_recursion_error.zs" ignoreErrors="true"/>
        <testGen testName="array_types_error" zsFile="packed_implicit_array_error.zs" ignoreErrors="true">
            <arg name="allowImplicitArrays"/>
        </testGen>
        <testGen testName="array_types_error" zsFile="wrong_array_length_type_error.zs" ignoreErrors="true"/>
    </target>

    <target name="compile" depends="gen">
        <testCompile testName="array_types_error"/>
    </target>

    <target name="clang_format" depends="compile" if="clang_format.exec_file">
        <testClangFormat testName="array_types_error"/>
    </target>

    <target name="spotbugs" depends="clang_format" if="spotbugs.home_dir">
        <testSpotBugs testName="array_types_error"/>
    </target>

    <target name="run" depends="spotbugs">
        <testRun testName="array_types_error"/>
    </target>

    <target name="clean">
        <testClean testName="array_types_error"/>
    </target>
</project>
