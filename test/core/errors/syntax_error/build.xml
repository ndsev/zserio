<project name="syntax_error" basedir="." default="run">
    <testProperties testPath="errors/syntax_error" testName="syntax_error"/>

    <target name="prepare">
        <testPrepare testName="syntax_error"/>
    </target>

    <target name="gen.check" depends="prepare">
        <testGenCheck testName="syntax_error"/>
    </target>

    <target name="gen" depends="gen.check" unless="syntax_error.zs.gen_is_uptodate">
        <testGen testName="syntax_error" zsFile="rshift_with_space_error.zs" ignoreErrors="true"/>
        <testGen testName="syntax_error" zsFile="unexpected_eof_in_array_length_error.zs" ignoreErrors="true"/>
        <testGen testName="syntax_error" zsFile="unexpected_eof_in_const_definition_error.zs"
            ignoreErrors="true"/>
        <testGen testName="syntax_error" zsFile="unexpected_eof_in_field_definition_error.zs"
            ignoreErrors="true"/>
        <testGen testName="syntax_error" zsFile="unexpected_eof_in_parameterized_field_definition_error.zs"
            ignoreErrors="true"/>
        <testGen testName="syntax_error" zsFile="unexpected_eof_in_struct_definition_error.zs"
            ignoreErrors="true"/>
        <testGen testName="syntax_error" zsFile="unexpected_eof_missing_semicolon_error.zs"
            ignoreErrors="true"/>
    </target>

    <target name="compile" depends="gen">
        <testCompile testName="syntax_error"/>
    </target>

    <target name="clang_format" depends="compile" if="clang_format.exec_file">
        <testClangFormat testName="syntax_error"/>
    </target>

    <target name="spotbugs" depends="clang_format" if="spotbugs.home_dir">
        <testSpotBugs testName="syntax_error"/>
    </target>

    <target name="run" depends="spotbugs">
        <testRun testName="syntax_error"/>
    </target>

    <target name="clean">
        <testClean testName="syntax_error"/>
    </target>
</project>
