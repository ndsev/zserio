<project name="choice_types_error" basedir="." default="run">
    <testProperties testPath="errors/choice_types_error" testName="choice_types_error"/>

    <target name="prepare">
        <testPrepare testName="choice_types_error"/>
    </target>

    <target name="gen.check" depends="prepare">
        <testGenCheck testName="choice_types_error"/>
    </target>

    <target name="gen" depends="gen.check" unless="choice_types_error.zs.gen_is_uptodate">
        <testGenClean testName="choice_types_error"/>
        <testGen testName="choice_types_error" zsFile="bitmask_case_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="bool_case_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="compound_selector_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="enum_case_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="field_case_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="float_selector_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="multiple_cases_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="multiple_cases_on_enum_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="multiple_cases_with_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="multiple_defaults_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="non_constant_case_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="optional_member_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="recursive_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="selector_expression_uses_indexed_offset_field_error.zs"
            ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="selector_expression_uses_offset_field_error.zs"
            ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="string_selector_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="unreachable_default_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="unreachable_default_multicase_error.zs"
            ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="unresolved_enum_item_error.zs" ignoreErrors="true"/>
        <testGen testName="choice_types_error" zsFile="unresolved_field_in_constraint_error.zs"
            ignoreErrors="true"/>
    </target>

    <target name="compile" depends="gen">
        <testCompile testName="choice_types_error" srcPath="${choice_types_error.base_dir}/java"/>
    </target>

    <target name="clang_format" depends="compile" if="clang_format.exec_file">
        <testClangFormat testName="choice_types_error" srcPath="${choice_types_error.base_dir}/java"/>
    </target>

    <target name="spotbugs" depends="clang_format" if="spotbugs.home_dir">
        <testSpotBugs testName="choice_types_error" srcPath="${choice_types_error.base_dir}/java"/>
    </target>

    <target name="run" depends="spotbugs">
        <testRun testName="choice_types_error"/>
    </target>

    <target name="clean">
        <testClean testName="choice_types_error"/>
    </target>
</project>
