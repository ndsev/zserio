<project name="functions_error" basedir="." default="run">
    <testProperties testPath="errors/functions_error" testName="functions_error"/>

    <target name="prepare">
        <testPrepare testName="functions_error"/>
    </target>

    <target name="gen.check" depends="prepare">
        <testGenCheck testName="functions_error"/>
    </target>

    <target name="gen" depends="gen.check" unless="functions_error.zs.gen_is_uptodate">
        <testGenClean testName="functions_error"/>
        <testGen testName="functions_error" zsFile="compound_field_not_available_error.zs" ignoreErrors="true"/>
        <testGen testName="functions_error" zsFile="different_scopes_error.zs" ignoreErrors="true"/>
        <testGen testName="functions_error" zsFile="field_not_available_error.zs" ignoreErrors="true"/>
        <testGen testName="functions_error" zsFile="field_used_as_indexed_offset_error.zs" ignoreErrors="true"/>
        <testGen testName="functions_error" zsFile="field_used_as_offset_error.zs" ignoreErrors="true"/>
        <testGen testName="functions_error" zsFile="function_call_with_argument_error.zs" ignoreErrors="true"/>
        <testGen testName="functions_error" zsFile="function_with_parameter_error.zs" ignoreErrors="true"/>
        <testGen testName="functions_error" zsFile="recursive_error.zs" ignoreErrors="true"/>
        <testGen testName="functions_error" zsFile="wrong_return_type_error.zs" ignoreErrors="true"/>
    </target>

    <target name="compile" depends="gen">
        <testCompile testName="functions_error" srcPath="${functions_error.base_dir}/java"/>
    </target>

    <target name="clang_format" depends="compile" if="clang_format.exec_file">
        <testClangFormat testName="functions_error" srcPath="${functions_error.base_dir}/java"/>
    </target>

    <target name="spotbugs" depends="clang_format" if="spotbugs.home_dir">
        <testSpotBugs testName="functions_error" srcPath="${functions_error.base_dir}/java"/>
    </target>

    <target name="run" depends="spotbugs">
        <testRun testName="functions_error"/>
    </target>

    <target name="clean">
        <testClean testName="functions_error"/>
    </target>
</project>
