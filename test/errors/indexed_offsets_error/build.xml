<project name="indexed_offsets_error" basedir="." default="run">
    <testProperties testPath="errors/indexed_offsets_error" testName="indexed_offsets_error"/>

    <target name="prepare">
        <testPrepare testName="indexed_offsets_error"/>
    </target>

    <target name="gen.check" depends="prepare">
        <testGenCheck testName="indexed_offsets_error"/>
    </target>

    <target name="gen" depends="gen.check" unless="indexed_offsets_error.zs.gen_is_uptodate">
        <testGenClean testName="indexed_offsets_error"/>
        <testGen testName="indexed_offsets_error" zsFile="alignment_expression_error.zs" ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="arithmetic_add_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="arithmetic_mult_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="array_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="bitwise_and_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="bitwise_or_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="bitwise_xor_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="constant_expression_error.zs" ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="constraint_expression_error.zs" ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="default_value_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="dot_expression_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="duplicated_indexed_offset_field_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="duplicated_indexed_offset_via_parameter_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="enum_value_expression_error.zs" ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="equality_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="function_call_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="id_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="isset_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="lengthof_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="literal_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="logical_and_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="logical_or_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="multiple_index_operators_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="no_array_error.zs" ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="numbits_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="optional_expression_error.zs" ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="packed_complex_offset_array_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="packed_param_offset_array_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="packed_simple_offset_array_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="parameter_no_array_error.zs" ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="parenthesis_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="relational_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="shift_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="ternary_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="unary_operator_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="valueof_in_array_expression_error.zs"
            ignoreErrors="true"/>
        <testGen testName="indexed_offsets_error" zsFile="varuint_offset_array_error.zs" ignoreErrors="true"/>
    </target>

    <target name="compile" depends="gen">
        <testCompile testName="indexed_offsets_error" srcPath="${indexed_offsets_error.base_dir}/java"/>
    </target>

    <target name="clang_format" depends="compile" if="clang_format.exec_file">
        <testClangFormat testName="indexed_offsets_error" srcPath="${indexed_offsets_error.base_dir}/java"/>
    </target>

    <target name="spotbugs" depends="clang_format" if="spotbugs.home_dir">
        <testSpotBugs testName="indexed_offsets_error" srcPath="${indexed_offsets_error.base_dir}/java"/>
    </target>

    <target name="run" depends="spotbugs">
        <testRun testName="indexed_offsets_error"/>
    </target>

    <target name="clean">
        <testClean testName="indexed_offsets_error"/>
    </target>
</project>
